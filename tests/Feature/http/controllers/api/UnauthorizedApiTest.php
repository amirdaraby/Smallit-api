<?php

namespace Tests\Feature\http\controllers\api;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\DB;
use Tests\TestCase;


class UnauthorizedApiTest extends TestCase
{
    /**
     * A basic feature test example.
     *
     * @return void
     */
    use RefreshDatabase;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->artisan("db:seed --class=ShortUrlSeeder");
    }


    public function test_unauthorized_index_error_handling(): void
    {
        $response = $this->getJson(route("url.index"));

        $response->assertUnauthorized();

    }

    public function test_unauthorized_search_error_handling(): void
    {
        $response = $this->postJson(route("api.search"), [
            "search" => "rockstargames.com"
        ]);

        $response->assertUnauthorized();

    }

    public function test_unauthorized_create_error_handling(): void
    {
        $response = $this->postJson(route('url.store'), [
            "url"   => "https://instagram.com/",
            "count" => 5
        ]);

        $response->assertUnauthorized();

    }


    public function test_unauthorized_register(): void
    {


        $response = $this->postJson(route("api.register"), [
            "name"     => "mamad",
            "email"    => "mamad@test.com",
            "password" => "123456789"
        ]);

        $response->assertJsonStructure(["status", "data" => ["token", "name"], "message"]);
        $response->assertCreated();

    }

    public function test_unauthorized_login(): void
    {


        $response = $this->postJson(route("api.login"), [
            "email"    => "amir@test.com",
            "password" => "123456789"
        ]);
        $response->assertStatus(202);
        $response->assertJsonStructure([
            "status", "data" => ["token", "name"], "message"
        ]);

    }


    public function test_unauthorized_register_error_handling()
    {

        $response = $this->postJson(route("api.register"), [
            "name"  => "amir",
            "email" => "amir@test.com",
//            "password" => "123456789"
        ]);
        $response->assertStatus(400);
    }

    public function test_unauthorized_login_error_handling(): void
    {


        $response = $this->postJson(route("api.login"), [
            "email" => "amir@test.com",
//           "password" => "123456789"
        ]);

        $response->assertStatus(400);
    }

    public function test_unauthorized_show_method_working_fine(): void
    {


        $response = $this->getJson(route("api.show", ["url" => "test"]), [
            "user_agent" => "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36",
            "uid"        => "08d220a29df946983a74dc988e9577bd"
        ]);

        $response->assertStatus(200);
        $response->assertJson(["status" => "ok", "data" => "https://instagram.com/", "message" => "ok"]);

    }

}
